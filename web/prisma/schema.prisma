// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

enum Department {
  COMPUTER_SCIENCE_1
  COMPUTER_SCIENCE_2
  COMPUTER_SCIENCE_3
  ARTIFICIAL_INTELLIGENCE
  COMPUTER_SCIENCE_AND_NETWORKS
  INTELLIGENT_SYSTEMS
  PHYSICS_INFORMATION
  BIOINFORMATICS
}

enum Semester {
  B1_SPRING
  B1_AUTUMN
  B2_SPRING
  B2_AUTUMN
  B3_SPRING
  B3_AUTUMN
  B4
  MASTER
}

enum FileType {
  MID_EXAM
  FINAL_EXAM
  REPORT
  OTHER
}

model User {
  id           String       @id // firebase auth uid
  email        String       @unique
  entranceYear Int
  department   Department
  role         Role         @default(USER)
  inviter      User?        @relation("InvitedBy", fields: [inviterId], references: [id])
  inviterId    String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  invitee      User[]       @relation("InvitedBy")
  invitation   Invitation[]
  file         File[]
}

model Invitation {
  id          String   @id @default(uuid())
  publisher   User     @relation(fields: [publisherId], references: [id])
  publisherId String
  validCount  Int
  expiredAt   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Subject {
  id         String     @id @default(uuid())
  name       String
  department Department
  semester   Semester
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  file       File[]
}

model File {
  url         String   @id
  publisher   User     @relation(fields: [publisherId], references: [id])
  publisherId String
  subject     Subject  @relation(fields: [subjectId], references: [id])
  subjectId   String
  year        Int
  type        FileType
  isAnswer    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
